
source [find target/swj-dp.tcl]
#source [find mem_helper.tcl]

if { [info exists CHIPNAME] } {
set _CHIPNAME $CHIPNAME
} else {
set _CHIPNAME mm32f5270
}

set FLASH_SIZE 0x40000

# Allow overriding the Flash bank size
if { [info exists FLASH_SIZE] } {
    set _FLASH_SIZE $FLASH_SIZE
} else {
    # autodetect size
    set _FLASH_SIZE 0
}

# ONLY use ENDIAN with targets that can change it.
if { [info exists ENDIAN] } {
set _ENDIAN $ENDIAN
} else {
set _ENDIAN little
}

if { [info exists CPUTAPID ] } {
set _CPUTAPID $CPUTAPID
} else {
#set _CPUTAPID 0x1be12aeb
set _CPUTAPID 0x1aeb0015
}

set _TARGETNAME $_CHIPNAME.cpu

#swj_newdap $_CHIPNAME cpu -irlen 5 -ircapture 0x1 -irmask 0xf -ignore-version -expected-id $_CPUTAPID
swj_newdap $_CHIPNAME cpu -irlen 5 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID
dap create $_CHIPNAME.dap -chain-position $_TARGETNAME
target create $_TARGETNAME cortex_m -dap $_CHIPNAME.dap -ap-num 0

# 定义一块内存区域用来烧录程序到 flash 临时使用
# 定义一块内存区域的起始地址，在 MMU 未开启时使用
$_TARGETNAME configure -work-area-phys 0x30000000 -work-area-size 0x4000

set _FLASHNAME $_CHIPNAME.flash
flash bank $_FLASHNAME stm32f1x 0x08000000 $_FLASH_SIZE 0 0 $_TARGETNAME
#flash bank $_FLASHNAME mm32f527x 0x08000000 $_FLASH_SIZE 0 0 $_TARGETNAME

proc mm32f5270_reset_init {} {
    # 配置 PLL 时钟
    # mww
}

$_TARGETNAME configure -event reset-init { mm32f5270_reset_init }

cortex_m reset_config sysresetreq

#$CHIPNAME init
